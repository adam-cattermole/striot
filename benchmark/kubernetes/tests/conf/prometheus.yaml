apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: kafka
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus-striot
spec:
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      striot: monitor
  resources:
    requests:
      memory: 400Mi
  enableAdminAPI: false
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: node-restriction.kubernetes.io/edge
              operator: NotIn
              values:
              - "true"
  # remoteWrite:
  #   url: "http://striot-influx.eastus.cloudapp.azure.com:8086/api/v1/prom/write?u=adam&p=&db=prometheus"

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: striot-sm
  labels:
    striot: monitor
spec:
  selector:
    matchLabels:
      striot: monitor
  endpoints:
  - targetPort: 8080
    interval: 1s
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  type: NodePort
  ports:
  - name: web
    nodePort: 30900
    port: 9090
    protocol: TCP
    targetPort: web
  selector:
    prometheus: prometheus-striot
