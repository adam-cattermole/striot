apiVersion: v1
kind: Secret
metadata:
  name: striot-storage-secret 
data:
  azurestorageaccountkey: L1ZnazI4Zi9DRzJQeCsvTVdNYXNzeVRaQzRENjRob3B6dkpFZnM5K1RwL2gyMkhvQWJGeWU5cmtPKzlQcFZDVGMvcnR0Tm9CTW1rVG9yTXh6dnJGUFE9PQ==
  azurestorageaccountname: c3RyaW90c3RvcmFnZXNtYg==
type: Opaque
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: striot-pv
  labels:
    usage: striot-pv
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  azureFile:
    secretNamespace: kafka
    secretName: striot-storage-secret
    shareName: striot-share
    readOnly: false
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: striot-pvc
  # Set this annotation to NOT let Kubernetes automatically create
  # a persistent volume for this volume claim.
  annotations:
    volume.beta.kubernetes.io/storage-class: ""
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  selector:
    # To make sure we match the claim with the exact volume, match the label
    matchLabels:
      usage: striot-pv